import{s as f,h as l,i}from"./scheduler.7e832b32.js";import{S as d,i as m,r as p,u as g,v as h,d as v,t as x,w as b}from"./index.9c30c41a.js";import{M as w,g as y,a as u}from"./MdWrapper.4a7c1b53.js";function I(n){let e,a;const o=[n[0],c];let r={};for(let t=0;t<o.length;t+=1)r=l(r,o[t]);return e=new w({props:r}),{c(){p(e.$$.fragment)},l(t){g(e.$$.fragment,t)},m(t,s){h(e,t,s),a=!0},p(t,[s]){const _=s&1?y(o,[s&1&&u(t[0]),s&0&&u(c)]):{};e.$set(_)},i(t){a||(v(e.$$.fragment,t),a=!0)},o(t){x(e.$$.fragment,t),a=!1},d(t){b(e,t)}}}const c={title:"If-Else Blocks",description:'In this tutorial, learn how to have the Micro:Bit choose between two options based on the value of a relational expression. "If-else" control structures are a fundamental building-block of all sorts of things you can build with your Micro:Bit!',date:"2023-06-24T00:00:00.000Z",type:"block",video:"-oAhLHiSQic"};function M(n,e,a){return n.$$set=o=>{a(0,e=l(l({},e),i(o)))},e=i(e),[e]}class $ extends d{constructor(e){super(),m(this,e,M,I,f,{})}}export{$ as default,c as metadata};
