import{s as m,h as i,i as u}from"./scheduler.7e832b32.js";import{S as p,i as d,r as f,u as g,v,d as h,t as x,w as b}from"./index.9c30c41a.js";import{M as y,g as w,a as l}from"./MdWrapper.4a7c1b53.js";function M(s){let t,n;const a=[s[0],_];let r={};for(let e=0;e<a.length;e+=1)r=i(r,a[e]);return t=new y({props:r}),{c(){f(t.$$.fragment)},l(e){g(t.$$.fragment,e)},m(e,o){v(t,e,o),n=!0},p(e,[o]){const c=o&1?w(a,[o&1&&l(e[0]),o&0&&l(_)]):{};t.$set(c)},i(e){n||(h(t.$$.fragment,e),n=!0)},o(e){x(t.$$.fragment,e),n=!1},d(e){b(t,e)}}}const _={title:"Pin Events",description:"In this tutorial, learn about how to provide input to the Micro:Bit via its input pins and use pin event blocks to trigger code.",authors:"Jon Stapleton",date:"2023-06-24T00:00:00.000Z",type:"block",tags:"input, events, pin, touch",video:"o0PabXmZ704"};function P(s,t,n){return s.$$set=a=>{n(0,t=i(i({},t),u(a)))},t=u(t),[t]}class Z extends p{constructor(t){super(),d(this,t,P,M,m,{})}}export{Z as default,_ as metadata};
