import{s as m,f as i,h as l}from"./scheduler.4eff0beb.js";import{S as d,i as f,r as p,u as g,v,d as h,t as x,w as b}from"./index.fe4a55db.js";import{M as w,g as y,a as c}from"./MdWrapper.28d833eb.js";function k(s){let t,a;const n=[s[0],u];let r={};for(let e=0;e<n.length;e+=1)r=i(r,n[e]);return t=new w({props:r}),{c(){p(t.$$.fragment)},l(e){g(t.$$.fragment,e)},m(e,o){v(t,e,o),a=!0},p(e,[o]){const _=o&1?y(n,[o&1&&c(e[0]),o&0&&c(u)]):{};t.$set(_)},i(e){a||(h(t.$$.fragment,e),a=!0)},o(e){x(t.$$.fragment,e),a=!1},d(e){b(t,e)}}}const u={title:"Combination Lock",description:'This tutorial covers how to create a simple "combination lock" using the Micro:Bit by using variables and an "if" statement.',authors:"Jon Stapleton",video:"NIpATvv1vV4"};function M(s,t,a){return s.$$set=n=>{a(0,t=i(i({},t),l(n)))},t=l(t),[t]}class T extends d{constructor(t){super(),f(this,t,M,k,m,{})}}export{T as default,u as metadata};
