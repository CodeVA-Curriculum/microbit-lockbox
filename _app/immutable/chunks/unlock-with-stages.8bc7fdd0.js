import{s as m,f as i,h as c}from"./scheduler.4eff0beb.js";import{S as d,i as f,r as p,u as g,v,d as h,t as x,w}from"./index.fe4a55db.js";import{M as k,g as y,a as u}from"./MdWrapper.4652dcef.js";function M(o){let t,a;const s=[o[0],l];let r={};for(let e=0;e<s.length;e+=1)r=i(r,s[e]);return t=new k({props:r}),{c(){p(t.$$.fragment)},l(e){g(t.$$.fragment,e)},m(e,n){v(t,e,n),a=!0},p(e,[n]){const _=n&1?y(s,[n&1&&u(e[0]),n&0&&u(l)]):{};t.$set(_)},i(e){a||(h(t.$$.fragment,e),a=!0)},o(e){x(t.$$.fragment,e),a=!1},d(e){w(t,e)}}}const l={title:"Stages Lock",description:'This tutorial covers how to create a "stages lock" using the Micro:Bit by using a variable and several "if" statements, creating a program where the user must provide specific inputs in a particular order to "unlock" the Micro:Bit.',video:"B5TJHoj2wHg"};function b(o,t,a){return o.$$set=s=>{a(0,t=i(i({},t),c(s)))},t=c(t),[t]}class j extends d{constructor(t){super(),f(this,t,b,M,m,{})}}export{j as default,l as metadata};
