import{s as ht,f as ue,n as Pe}from"../chunks/scheduler.7e832b32.js";import{S as ft,i as pt,g as s,s as c,m as A,h as l,j as o,y as Q,c as n,f as a,n as P,k as t,l as mt,a as gt,x as e}from"../chunks/index.9c30c41a.js";import{b as ee}from"../chunks/paths.a9c1a607.js";const _t=""+new URL("../assets/bbc_microbit.fb3ff7ea.jpg",import.meta.url).href,bt=""+new URL("../assets/variable-handler.19664c45.png",import.meta.url).href,kt=""+new URL("../assets/input.6a65c802.jpg",import.meta.url).href,wt=""+new URL("../assets/fidget-cube.4799c426.jpg",import.meta.url).href;function xt(vt){let r,H,He="Micro:Bit Lockbox Challenges",ve,k,je="The links below will take you to resources for each of the four challenges leading up to the <i>Micro:Bit Lockbox Puzzle Competition</i>. Check them out! You can also view the high-level agenda for the entire unit of study by clicking the button below:",he,d,qe="Open the High-Level Agenda",fe,te,pe,j,q,u,S,w,Se,me,v,Y,x,ge,_e,C,Re="In this lesson, students learn the basics of coding for the Micro:Bit using the MakeCode development tool. Students will engage in PRIMM cycles, pair programming, and will begin working on the puzzle box they’ll finish in later lessons by building an “unlocking” animation using display output blocks.",be,R,T,h,F,y,Te,ke,f,J,I,we,xe,p,Ce,E,ye,Ie,Ee,G,O,m,U,M,Fe,Me,g,X,D,De,Ve,V,Ge="This lesson introduces the use of variables to store data or the results of mathematical operations. Students will practice giving variables unique and meaningful names. At the end of the lesson, students will practice using variables by creating a “scorekeeping” program, using the Micro:Bit to keep track of the score for a game.",Be,W,K,_,N,B,Oe,ze,b,Z,z,Le,Ae,L,Ue="In this lesson, students will learn how to write conditional control structures (e..g, “if” statements) to have a Micro:Bit make automated decisions based on sensor input. At the end of the lesson, students will use these skills to build a “lockbox” puzzle for their peers to solve.";return{c(){r=s("div"),H=s("h1"),H.textContent=He,ve=c(),k=s("p"),k.innerHTML=je,he=c(),d=s("a"),d.textContent=qe,fe=c(),te=s("hr"),pe=c(),j=s("div"),q=s("div"),u=s("div"),S=s("div"),w=s("img"),me=c(),v=s("div"),Y=s("h2"),x=s("a"),ge=A("Challenge #1: Display & Lifecycle"),_e=c(),C=s("p"),C.textContent=Re,be=c(),R=s("div"),T=s("div"),h=s("div"),F=s("div"),y=s("img"),ke=c(),f=s("div"),J=s("h2"),I=s("a"),we=A("Challenge #2: Input Prototype"),xe=c(),p=s("p"),Ce=A("In this lesson, students will learn how to make interactive programs using input event blocks, the MakeCode development tool, and the Micro:Bit microcontroller. Students will work collaboratively to explore different methods of providing input to the Micro:Bit, and will create a “fidget cube” puzzle box prototype which will serve as a starting point for their “lockbox” puzzles (see "),E=s("a"),ye=A("Conditionals with Micro:Bit"),Ie=A(" for the “lockbox” project description)."),Ee=c(),G=s("div"),O=s("div"),m=s("div"),U=s("div"),M=s("img"),Me=c(),g=s("div"),X=s("h2"),D=s("a"),De=A("Challenge #3: Scoring with Variables"),Ve=c(),V=s("p"),V.textContent=Ge,Be=c(),W=s("div"),K=s("div"),_=s("div"),N=s("div"),B=s("img"),ze=c(),b=s("div"),Z=s("h2"),z=s("a"),Le=A("Challenge #4: Micro:Bit Lockbox"),Ae=c(),L=s("p"),L.textContent=Ue,this.h()},l($){r=l($,"DIV",{class:!0});var i=o(r);H=l(i,"H1",{["data-svelte-h"]:!0}),Q(H)!=="svelte-1uecud"&&(H.textContent=He),ve=n(i),k=l(i,"P",{class:!0,["data-svelte-h"]:!0}),Q(k)!=="svelte-3l7g59"&&(k.innerHTML=je),he=n(i),d=l(i,"A",{class:!0,href:!0,target:!0,["data-svelte-h"]:!0}),Q(d)!=="svelte-130i3ez"&&(d.textContent=qe),fe=n(i),te=l(i,"HR",{style:!0}),pe=n(i),j=l(i,"DIV",{class:!0});var We=o(j);q=l(We,"DIV",{class:!0});var Ke=o(q);u=l(Ke,"DIV",{class:!0});var se=o(u);S=l(se,"DIV",{class:!0});var Ne=o(S);w=l(Ne,"IMG",{src:!0,alt:!0,class:!0}),Ne.forEach(a),me=n(se),v=l(se,"DIV",{class:!0});var le=o(v);Y=l(le,"H2",{});var Qe=o(Y);x=l(Qe,"A",{href:!0,class:!0});var Ye=o(x);ge=P(Ye,"Challenge #1: Display & Lifecycle"),Ye.forEach(a),Qe.forEach(a),_e=n(le),C=l(le,"P",{class:!0,["data-svelte-h"]:!0}),Q(C)!=="svelte-12u8l1f"&&(C.textContent=Re),le.forEach(a),se.forEach(a),Ke.forEach(a),We.forEach(a),be=n(i),R=l(i,"DIV",{class:!0});var Je=o(R);T=l(Je,"DIV",{class:!0});var Xe=o(T);h=l(Xe,"DIV",{class:!0});var ae=o(h);F=l(ae,"DIV",{class:!0});var Ze=o(F);y=l(Ze,"IMG",{src:!0,alt:!0,class:!0}),Ze.forEach(a),ke=n(ae),f=l(ae,"DIV",{class:!0});var oe=o(f);J=l(oe,"H2",{});var $e=o(J);I=l($e,"A",{href:!0,class:!0});var et=o(I);we=P(et,"Challenge #2: Input Prototype"),et.forEach(a),$e.forEach(a),xe=n(oe),p=l(oe,"P",{class:!0});var re=o(p);Ce=P(re,"In this lesson, students will learn how to make interactive programs using input event blocks, the MakeCode development tool, and the Micro:Bit microcontroller. Students will work collaboratively to explore different methods of providing input to the Micro:Bit, and will create a “fidget cube” puzzle box prototype which will serve as a starting point for their “lockbox” puzzles (see "),E=l(re,"A",{href:!0,class:!0});var tt=o(E);ye=P(tt,"Conditionals with Micro:Bit"),tt.forEach(a),Ie=P(re," for the “lockbox” project description)."),re.forEach(a),oe.forEach(a),ae.forEach(a),Xe.forEach(a),Je.forEach(a),Ee=n(i),G=l(i,"DIV",{class:!0});var st=o(G);O=l(st,"DIV",{class:!0});var lt=o(O);m=l(lt,"DIV",{class:!0});var ie=o(m);U=l(ie,"DIV",{class:!0});var at=o(U);M=l(at,"IMG",{src:!0,alt:!0,class:!0}),at.forEach(a),Me=n(ie),g=l(ie,"DIV",{class:!0});var ce=o(g);X=l(ce,"H2",{});var ot=o(X);D=l(ot,"A",{href:!0,class:!0});var rt=o(D);De=P(rt,"Challenge #3: Scoring with Variables"),rt.forEach(a),ot.forEach(a),Ve=n(ce),V=l(ce,"P",{class:!0,["data-svelte-h"]:!0}),Q(V)!=="svelte-1iu1tws"&&(V.textContent=Ge),ce.forEach(a),ie.forEach(a),lt.forEach(a),st.forEach(a),Be=n(i),W=l(i,"DIV",{class:!0});var it=o(W);K=l(it,"DIV",{class:!0});var ct=o(K);_=l(ct,"DIV",{class:!0});var ne=o(_);N=l(ne,"DIV",{class:!0});var nt=o(N);B=l(nt,"IMG",{src:!0,alt:!0,class:!0}),nt.forEach(a),ze=n(ne),b=l(ne,"DIV",{class:!0});var de=o(b);Z=l(de,"H2",{});var dt=o(Z);z=l(dt,"A",{href:!0,class:!0});var ut=o(z);Le=P(ut,"Challenge #4: Micro:Bit Lockbox"),ut.forEach(a),dt.forEach(a),Ae=n(de),L=l(de,"P",{class:!0,["data-svelte-h"]:!0}),Q(L)!=="svelte-1wvij4b"&&(L.textContent=Ue),de.forEach(a),ne.forEach(a),ct.forEach(a),it.forEach(a),i.forEach(a),this.h()},h(){t(k,"class","block"),t(d,"class","button svelte-7vlcu5"),t(d,"href","https://docs.google.com/document/d/1W4FQzdPy7AtAeiBMWvBBFyOOglLRKuoOdA6qFAvNu74/edit"),t(d,"target","_blank"),mt(te,"margin-bottom","3rem"),ue(w.src,Se=_t)||t(w,"src",Se),t(w,"alt","The BBC microbit on a white background"),t(w,"class","svelte-7vlcu5"),t(S,"class","column is-one-quarter"),t(x,"href",ee+"/lessons/display-lifecycle"),t(x,"class","svelte-7vlcu5"),t(C,"class","block"),t(v,"class","column"),t(u,"class","columns"),t(q,"class","card-content"),t(j,"class","card my-5"),ue(y.src,Te=kt)||t(y,"src",Te),t(y,"alt","The Micro:Bit with alligator clips attached to its pins"),t(y,"class","svelte-7vlcu5"),t(F,"class","column is-one-quarter"),t(I,"href",ee+"/lessons/input"),t(I,"class","svelte-7vlcu5"),t(E,"href",ee+"/lessons/conditions"),t(E,"class","svelte-7vlcu5"),t(p,"class","block"),t(f,"class","column"),t(h,"class","columns"),t(T,"class","card-content"),t(R,"class","card my-5"),ue(M.src,Fe=bt)||t(M,"src",Fe),t(M,"alt","MakeCode event and variable blocks"),t(M,"class","svelte-7vlcu5"),t(U,"class","column is-one-quarter"),t(D,"href",ee+"/lessons/variables"),t(D,"class","svelte-7vlcu5"),t(V,"class","block"),t(g,"class","column"),t(m,"class","columns"),t(O,"class","card-content"),t(G,"class","card my-5"),ue(B.src,Oe=wt)||t(B,"src",Oe),t(B,"alt","Fidget cube example projects"),t(B,"class","svelte-7vlcu5"),t(N,"class","column is-one-quarter"),t(z,"href",ee+"/lessons/conditions"),t(z,"class","svelte-7vlcu5"),t(L,"class","block"),t(b,"class","column"),t(_,"class","columns"),t(K,"class","card-content"),t(W,"class","card my-5"),t(r,"class","lessons content")},m($,i){gt($,r,i),e(r,H),e(r,ve),e(r,k),e(r,he),e(r,d),e(r,fe),e(r,te),e(r,pe),e(r,j),e(j,q),e(q,u),e(u,S),e(S,w),e(u,me),e(u,v),e(v,Y),e(Y,x),e(x,ge),e(v,_e),e(v,C),e(r,be),e(r,R),e(R,T),e(T,h),e(h,F),e(F,y),e(h,ke),e(h,f),e(f,J),e(J,I),e(I,we),e(f,xe),e(f,p),e(p,Ce),e(p,E),e(E,ye),e(p,Ie),e(r,Ee),e(r,G),e(G,O),e(O,m),e(m,U),e(U,M),e(m,Me),e(m,g),e(g,X),e(X,D),e(D,De),e(g,Ve),e(g,V),e(r,Be),e(r,W),e(W,K),e(K,_),e(_,N),e(N,B),e(_,ze),e(_,b),e(b,Z),e(Z,z),e(z,Le),e(b,Ae),e(b,L)},p:Pe,i:Pe,o:Pe,d($){$&&a(r)}}}class Et extends ft{constructor(r){super(),pt(this,r,null,xt,ht,{})}}export{Et as component};
